<Window x:Class="UruruNotes.CalendarPage"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:local="clr-namespace:UruruNotes" 
        xmlns:converters="clr-namespace:UruruNotes.Models"
        xmlns:viewsmodels="clr-namespace:UruruNotes.ViewsModels" 
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        d:DataContext="{d:DesignInstance Type=viewsmodels:CalendarViewModel}"
        mc:Ignorable="d" 
        MinHeight="550" MinWidth="850" 
        Width="800"
        Height="600"
        Title="CalendarPage" Icon="/Views/calendar.png"
        Background="{DynamicResource WindowBackground}"
        SizeToContent="Manual"
        HorizontalContentAlignment="Stretch">
    <Window.Resources>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converters:BoolToBrushConverter x:Key="BoolToBrushConverter" />
        <converters:SubtractMarginConverter x:Key="SubtractMarginConverter" />
        <converters:ViewToVisibilityConverter x:Key="ViewToVisibilityConverter"/>
        <converters:ViewToBrushConverter x:Key="ViewToBrushConverter"/>
        <converters:ViewToTextConverter x:Key="ViewToTextConverter"/>
        <converters:ViewToContentConverter x:Key="ViewToContentConverter"/>
        <converters:MathConverter x:Key="MathConverter"/>
        <ScaleTransform x:Key="MainScaleTransform" ScaleX="{Binding Scale}" ScaleY="{Binding Scale}" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <sys:Double x:Key="PanelWidth">400</sys:Double>

        <!-- Анимация закрытия правого меню -->
        <Storyboard x:Key="ClosingRightMenu">
            <DoubleAnimation Storyboard.TargetName="TaskPanel"
                 Storyboard.TargetProperty="Width" 
                 From="{StaticResource PanelWidth}" To="0" 
                 Duration="0:0:0.5" />
        </Storyboard>

        <!-- Анимация открытия правого меню -->
        <Storyboard x:Key="OpeningRightMenu">
            <DoubleAnimation Storyboard.TargetName="TaskPanel"
                             Storyboard.TargetProperty="Width" 
                             From="0" To="{StaticResource PanelWidth}" 
                             Duration="0:0:0.5" />
        </Storyboard>
        <!-- Стиль для ComboBox -->
        <Style x:Key="ThemedComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Background" Value="{DynamicResource ControlBackground}" />
            <Setter Property="BorderBrush" Value="{DynamicResource ControlBorder}" />
            <Setter Property="Foreground" Value="{DynamicResource TextForeground}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="5,3" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton x:Name="ToggleButton" 
                                          BorderBrush="{TemplateBinding BorderBrush}"
                                          Background="{TemplateBinding Background}"
                                          Foreground="{TemplateBinding Foreground}"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="20" />
                                            </Grid.ColumnDefinitions>
                                            <Border x:Name="Border" 
                                                    Grid.ColumnSpan="2"
                                                    Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}" />
                                            <Path x:Name="Arrow"
                                                  Grid.Column="1"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  Fill="{DynamicResource TextForeground}"
                                                  Data="M 0 0 L 4 4 L 8 0 Z" />
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource ButtonBackground}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <ContentPresenter x:Name="ContentSite"
                                              IsHitTestVisible="False"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left" />
                            <Popup x:Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True" 
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                <Grid x:Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder"
                                            Background="{DynamicResource PanelBackground}"
                                            BorderThickness="1"
                                            BorderBrush="{DynamicResource BorderBrush}" />
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CustomComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5" Padding="5">
                            <Grid>
                                <ToggleButton Name="ToggleButton" Grid.Column="2"
                                      Focusable="False"
                                      IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                      ClickMode="Press">
                                    <Grid>
                                        <Path Fill="Black" Data="M 0 0 L 4 4 L 8 0 Z" 
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
                                    </Grid>
                                </ToggleButton>
                                <ContentPresenter Name="ContentPresenter"
                                          IsHitTestVisible="False"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          Margin="4,0,30,0"
                                          VerticalAlignment="Center"/>
                                <Popup Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Slide">
                                    <Border Background="White" BorderBrush="Gray" BorderThickness="1" CornerRadius="5">
                                        <ScrollViewer>
                                            <ScrollViewer.Resources>
                                                <Style TargetType="ScrollBar">
                                                    <Setter Property="Width" Value="8"/>
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="ScrollBar">
                                                                <Grid Background="Transparent">
                                                                    <Rectangle Fill="LightGray" RadiusX="4" RadiusY="4" Width="8"/>
                                                                    <Thumb Name="Thumb" Background="Gray" Width="8" Height="30"/>
                                                                </Grid>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ScrollViewer.Resources>
                                            <StackPanel IsItemsHost="True"/>
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#F0F0F0"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="BorderBrush" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="TreeViewItem">
            <Setter Property="Foreground" Value="#333"/>
            <Setter Property="FontSize" Value="{Binding NoteFontSize}"/>
            <Setter Property="Margin" Value="2"/>
        </Style>
    </Window.Resources>

    <Window.Triggers>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ToggleButtonClose">
            <BeginStoryboard Storyboard="{StaticResource ClosingRightMenu}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ToggleButtonOpen">
            <BeginStoryboard Storyboard="{StaticResource OpeningRightMenu}" />
        </EventTrigger>
    </Window.Triggers>

    <Grid x:Name="ContentGrid" LayoutTransform="{Binding ScaleTransform}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" MinWidth="400" x:Name="CalendarColumn"/>
            <ColumnDefinition Width="Auto" x:Name="NotesColumn"/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0" Visibility="{Binding IsCalendarVisible,
                Converter={StaticResource BoolToVisibilityConverter}}">
            <!-- Календарь -->
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <!-- Заголовок и кнопки -->
                    <RowDefinition Height="Auto" />
                    <!-- Дни недели -->
                    <RowDefinition Height="*" />
                    <!-- Календарь -->
                </Grid.RowDefinitions>

                <!-- Заголовок и кнопки -->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="{Binding MarginTop}" Grid.Row="0">
                    <Button Content="⟨" 
                            Width="{Binding ButtonWidth}" 
                            Height="{Binding ButtonHeight}" 
                            Command="{Binding PreviousMonthCommand}" 
                            Background="{DynamicResource ButtonBackground}" 
                            BorderBrush="{DynamicResource ButtonBorder}"
                            Foreground="{DynamicResource ButtonForeground}" 
                            Style="{StaticResource NavigationButtonStyle}"/>
                    <TextBlock Text="{Binding CurrentMonthYear}" 
                               FontSize="{Binding TitleFontSize}" 
                               FontWeight="Bold" 
                               Margin="{Binding MarginMiddle}" 
                               Foreground="{DynamicResource CalendarMonthForeground}"
                               FontFamily="{DynamicResource GlobalFont}"/>
                    <Button Content="⟩" 
                            Width="{Binding ButtonWidth}" 
                            Height="{Binding ButtonHeight}" 
                            Command="{Binding NextMonthCommand}" 
                            Background="{DynamicResource ButtonBackground}" 
                            BorderBrush="{DynamicResource ButtonBorder}"
                            Foreground="{DynamicResource ButtonForeground}" 
                            Style="{StaticResource NavigationButtonStyle}"/>
                </StackPanel>

                <!-- Дни недели -->
                <UniformGrid Rows="1" Columns="7" Margin="0,10,32,10" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <TextBlock Text="Пн" 
                               TextAlignment="Center" 
                               FontWeight="Bold" 
                               FontSize="{Binding DayFontSize}"
                               Foreground="{DynamicResource TextForeground}"
                               FontFamily="{DynamicResource GlobalFont}"/>
                    <TextBlock Text="Вт" 
                               TextAlignment="Center" 
                               FontWeight="Bold" 
                               FontSize="{Binding DayFontSize}"
                               Foreground="{DynamicResource TextForeground}"
                               FontFamily="{DynamicResource GlobalFont}"/>
                    <TextBlock Text="Ср" 
                               TextAlignment="Center" 
                               FontWeight="Bold" 
                               FontSize="{Binding DayFontSize}"
                               Foreground="{DynamicResource TextForeground}"
                               FontFamily="{DynamicResource GlobalFont}"/>
                    <TextBlock Text="Чт" 
                               TextAlignment="Center" 
                               FontWeight="Bold" 
                               FontSize="{Binding DayFontSize}"
                               Foreground="{DynamicResource TextForeground}"
                               FontFamily="{DynamicResource GlobalFont}"/>
                    <TextBlock Text="Пт" 
                               TextAlignment="Center" 
                               FontWeight="Bold" 
                               FontSize="{Binding DayFontSize}"
                               Foreground="{DynamicResource TextForeground}"
                               FontFamily="{DynamicResource GlobalFont}"/>
                    <TextBlock Text="Сб" 
                               TextAlignment="Center" 
                               FontWeight="Bold" 
                               Foreground="Red" 
                               FontSize="{Binding DayFontSize}"
                               FontFamily="{DynamicResource GlobalFont}"/>
                    <TextBlock Text="Вс" 
                               TextAlignment="Center" 
                               FontWeight="Bold" 
                               Foreground="Red" 
                               FontSize="{Binding DayFontSize}"
                               FontFamily="{DynamicResource GlobalFont}"/>
                </UniformGrid>

                <!-- Календарь -->
                <ItemsControl ItemsSource="{Binding Days}" Grid.Row="2" Margin="0,0,32,0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Rows="6" Columns="7" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Button Command="{Binding DataContext.OpenTaskAreaCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}" 
                                    CommandParameter="{Binding}" 
                                    Padding="0"
                                    BorderBrush="Transparent" 
                                    BorderThickness="0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    VerticalContentAlignment="Center"
                                    HorizontalContentAlignment="Center"
                                    Foreground="{DynamicResource CalendarDayForeground}"
                                    Margin="{Binding DataContext.MarginButtons, RelativeSource={RelativeSource AncestorType=Window}}">
                                <Grid VerticalAlignment="Stretch">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>

                                    <!-- Число дня -->
                                    <TextBlock Text="{Binding DisplayText}" 
                                               HorizontalAlignment="Center" VerticalAlignment="Center" 
                                               Grid.Row="0" FontSize="{Binding DataContext.DayFontSize, RelativeSource={RelativeSource AncestorType=Window}}"
                                               Foreground="{DynamicResource CalendarDayForeground}"
                                               FontFamily="{DynamicResource GlobalFont}"/>
                                    <!-- Блок с красной точкой и временем -->
                                    <StackPanel Orientation="Horizontal" 
                                               HorizontalAlignment="Center" 
                                               VerticalAlignment="Center" 
                                               Grid.Row="1">
                                        <Ellipse Width="6" 
                                             Height="6" 
                                             Fill="Red" 
                                             VerticalAlignment="Center"
                                             Visibility="{Binding HasNote, Converter={StaticResource BoolToVisibilityConverter}}"/>

                                        <!-- Отображаем ближайшее время -->
                                        <TextBlock Text="{Binding NearestReminder}" 
                                                   Margin="5,0"
                                                   Foreground="Red" 
                                                   FontSize="{Binding DataContext.DayFontSize, 
                                                           RelativeSource={RelativeSource AncestorType=Window}}"
                                                    FontFamily="{DynamicResource GlobalFont}"/>
                                    </StackPanel>
                                </Grid>
                            </Button>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Grid>
        </Grid>

        <!-- Поле редактирования и создания заметок/напоминаний -->
        <Grid x:Name="EditBox" Grid.Column="0" Visibility="{Binding IsEditorVisible, Converter={StaticResource BoolToVisibilityConverter}}"  VerticalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <!-- Кнопка "Назад" -->
                <RowDefinition Height="*"/>
                <!-- Основное содержимое -->
            </Grid.RowDefinitions>

            <!-- Кнопка "Назад" -->
            <Button Content="← Назад к календарю" 
            Command="{Binding BackToCalendarCommand}"
            Margin="10" HorizontalAlignment="Left" Width="157"/>

            <ScrollViewer Grid.Row="1"
                  VerticalScrollBarVisibility="Auto"
                  HorizontalScrollBarVisibility="Disabled"
                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

                <StackPanel Grid.Row="1" Margin="10"
                MaxWidth="{Binding ActualWidth, 
                    RelativeSource={RelativeSource AncestorType=ScrollViewer}, 
                    Converter={StaticResource SubtractMarginConverter}, 
                    ConverterParameter=40}">

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <!-- Занимает всё доступное пространство -->
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!-- Секция заметок -->
                        <StackPanel Visibility="{Binding CurrentView, Converter={StaticResource ViewToVisibilityConverter}, ConverterParameter=Notes}" Background="{DynamicResource PanelBackground}">
                            <TextBlock Grid.Row="0" Text="Создать заметку" FontSize="{Binding NoteTitleFontSize}" FontWeight="Bold" Margin="10" HorizontalAlignment="Stretch" Foreground="{DynamicResource TextForeground}"
                                   FontFamily="{DynamicResource GlobalFont}"/>
                            <TextBox Grid.Row="1" TextWrapping="Wrap" Text="{Binding NewTaskContent}" 
                            AcceptsReturn="True" AcceptsTab="True" 
                            VerticalScrollBarVisibility="Auto" VerticalAlignment="Stretch"
                            HorizontalScrollBarVisibility="Disabled"
                            HorizontalAlignment="Stretch"  MinHeight="150"  MaxHeight="{Binding ActualHeight, ElementName=EditBox, 
                            Converter={StaticResource MathConverter}, 
                            ConverterParameter=-200}"
                            Margin="10"                
                            FontSize="{Binding NoteFontSize}" 
                            Foreground="{DynamicResource InputText}"
                            CaretBrush="{DynamicResource TextBoxCaret}" SelectionBrush="{DynamicResource TextBoxCaret}" 
                            PreviewKeyDown="TextBox_PreviewKeyDown" Loaded="TextBox_Loaded" Background="{DynamicResource ControlBackground}" BorderBrush="{DynamicResource ControlBorder}"/>
                            <Button Grid.Row="2" Content="Сохранить" Command="{Binding SaveNoteCommand}" CommandParameter="{Binding SelectedNote}"
                                MinWidth="80" MinHeight="25" 
                                Margin="20,5,5,10" HorizontalAlignment="Left" 
                                FontSize="{Binding NoteFontSize}"
                                Background="{DynamicResource ButtonBackground}" BorderBrush="{DynamicResource ButtonBorder}" Foreground="{DynamicResource ButtonForeground}" />
                        </StackPanel>
                    </Grid>

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <!-- Занимает всё доступное пространство -->
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <!-- Секция напоминаний -->
                        <StackPanel Visibility="{Binding CurrentView, Converter={StaticResource ViewToVisibilityConverter}, ConverterParameter=Reminders}">
                            <TextBlock Grid.Row="0" Text="Создать напоминание"
                             FontSize="{Binding NoteTitleFontSize}" 
                             FontWeight="Bold" 
                             Margin="10" 
                             HorizontalAlignment="Stretch"
                             Foreground="{DynamicResource TextForeground}"
                             FontFamily="{DynamicResource GlobalFont}"/>
                            <TextBox Grid.Row="1" 
                            TextWrapping="Wrap" 
                            Text="{Binding NewTaskContentRemind}" 
                            AcceptsReturn="True" 
                            AcceptsTab="True" 
                            VerticalScrollBarVisibility="Auto"  
                            VerticalAlignment="Stretch"
                            HorizontalScrollBarVisibility="Disabled" 
                            HorizontalAlignment="Stretch"
                            MinHeight="150" 
                            MaxHeight="{Binding ActualHeight, ElementName=EditBox, 
                                              Converter={StaticResource MathConverter}, 
                                              ConverterParameter=-294}"
                            Margin="10"  
                            FontSize="{Binding NoteFontSize}" 
                            CaretBrush="{DynamicResource TextBoxCaret}"
                            SelectionBrush="{DynamicResource TextBoxCaret}" 
                            PreviewKeyDown="TextBox_PreviewKeyDown" Loaded="TextBox_Loaded" 
                            Background="{DynamicResource ControlBackground}"
                            BorderBrush="{DynamicResource ControlBorder}"
                            Foreground="{DynamicResource  InputText}"/>
                            <Button Grid.Row="2" 
                            Content="Сохранить" 
                            Command="{Binding SaveReminderCommand}" 
                            MinWidth="80" 
                            MinHeight="25" Margin="20,5,5,10"
                            Background="{DynamicResource ButtonBackground}"
                            BorderBrush="{DynamicResource ButtonBorder}"
                            Foreground="{DynamicResource ButtonForeground}"
                            FontSize="{Binding NoteFontSize}" 
                            HorizontalAlignment="Left" />
                            <TextBlock Grid.Row="2" Text="Время напоминания:" FontSize="{Binding NoteFontSize}" Height="Auto" Width="Auto" Margin="20,0,0,0" HorizontalAlignment="Left" />
                            <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="10,5,10,10">
                                <ComboBox x:Name="HourPicker" SelectedItem="{Binding SelectedHour}" 
                                      Width="100" VerticalAlignment="Center" Margin="5,0,5,0" 
                                      FontSize="{Binding NoteFontSize}" Style="{StaticResource ThemedComboBoxStyle}">
                                    <ComboBox.ItemsSource>
                                        <x:Array Type="{x:Type sys:Int32}">
                                            <sys:Int32>0</sys:Int32>
                                            <sys:Int32>1</sys:Int32>
                                            <sys:Int32>2</sys:Int32>
                                            <sys:Int32>3</sys:Int32>
                                            <sys:Int32>4</sys:Int32>
                                            <sys:Int32>5</sys:Int32>
                                            <sys:Int32>6</sys:Int32>
                                            <sys:Int32>7</sys:Int32>
                                            <sys:Int32>8</sys:Int32>
                                            <sys:Int32>9</sys:Int32>
                                            <sys:Int32>10</sys:Int32>
                                            <sys:Int32>11</sys:Int32>
                                            <sys:Int32>12</sys:Int32>
                                            <sys:Int32>13</sys:Int32>
                                            <sys:Int32>14</sys:Int32>
                                            <sys:Int32>15</sys:Int32>
                                            <sys:Int32>16</sys:Int32>
                                            <sys:Int32>17</sys:Int32>
                                            <sys:Int32>18</sys:Int32>
                                            <sys:Int32>19</sys:Int32>
                                            <sys:Int32>20</sys:Int32>
                                            <sys:Int32>21</sys:Int32>
                                            <sys:Int32>22</sys:Int32>
                                            <sys:Int32>23</sys:Int32>
                                        </x:Array>
                                    </ComboBox.ItemsSource>
                                </ComboBox>

                                <ComboBox x:Name="MinutePicker" SelectedItem="{Binding SelectedMinute}" 

                                      Width="100" VerticalAlignment="Center" Margin="0,0,10,0" 
                                      FontSize="{Binding NoteFontSize}" Style="{StaticResource ThemedComboBoxStyle}">
                                    <ComboBox.ItemsSource>
                                        <x:Array Type="{x:Type sys:Int32}">
                                            <sys:Int32>0</sys:Int32>
                                            <sys:Int32>5</sys:Int32>
                                            <sys:Int32>10</sys:Int32>
                                            <sys:Int32>15</sys:Int32>
                                            <sys:Int32>20</sys:Int32>
                                            <sys:Int32>25</sys:Int32>
                                            <sys:Int32>30</sys:Int32>
                                            <sys:Int32>35</sys:Int32>
                                            <sys:Int32>40</sys:Int32>
                                            <sys:Int32>45</sys:Int32>
                                            <sys:Int32>50</sys:Int32>
                                            <sys:Int32>55</sys:Int32>
                                        </x:Array>
                                    </ComboBox.ItemsSource>
                                </ComboBox>

                            </StackPanel>


                        </StackPanel>
                    </Grid>
                </StackPanel>
            </ScrollViewer>
        </Grid>

        <!-- Панель задач -->
        <Border Grid.Column="1" Width="Auto" 
                    Visibility="{Binding IsTaskPanelVisible, Converter={StaticResource BoolToVisibilityConverter}}" 
                    Margin="10">
            <Grid Margin="-39,0,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition x:Name="TaskPanelColumn" Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Button x:Name="ToggleButtonOpen" Grid.Column="0"
                            Width="20" Height="50"
                             HorizontalAlignment="Right"
                             VerticalAlignment="Bottom"
                             Background="Transparent"
                             Click="TogglePanel_Click"
                             BorderThickness="0"
                            Visibility="Collapsed">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <!-- Прямоугольник-закладка -->
                                <Rectangle x:Name="BookmarkRectangle"
                            Width="20" Height="50"
                            Fill="LightGray" 
                            StrokeThickness="1"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center" />
                            </Grid>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <Button x:Name="ToggleButtonClose" Grid.Column="0"
                            Width="20" Height="50"
                             HorizontalAlignment="Right"
                             VerticalAlignment="Bottom"
                             Background="Transparent"
                             Click="TogglePanel_Click"
                             BorderThickness="0" 
                            >
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <!-- Прямоугольник-закладка -->
                                <Rectangle x:Name="BookmarkRectangle"
                                    Width="20" Height="50"
                                    Fill="LightGray" 
                                    StrokeThickness="1"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center" />
                            </Grid>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <StackPanel x:Name="TaskPanel" Grid.Column="1" Background="LightGray" Width="{StaticResource PanelWidth}">
                    <!-- Кнопки переключения -->
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="10,5">
                        <Button Content="Заметки" 
                                Command="{Binding SwitchViewCommand}" 
                                CommandParameter="Notes"
                                Margin="5,0"
                                Background="{Binding CurrentView, Converter={StaticResource ViewToBrushConverter}, ConverterParameter=Notes}"/>

                        <Button Content="Напоминания" 
                                Command="{Binding SwitchViewCommand}" 
                                CommandParameter="Reminders" 
                                Margin="5,0"
                                Background="{Binding CurrentView, Converter={StaticResource ViewToBrushConverter}, ConverterParameter=Reminders}"/>

                        <Button Content="Создать" 
                                Command="{Binding CreateNewNoteCommand}"
                                Margin="5,0"/>
                    </StackPanel>

                    <!-- Секция заметок -->
                    <StackPanel Grid.Row="1" Visibility="{Binding CurrentView, Converter={StaticResource ViewToVisibilityConverter}, ConverterParameter=Notes}">
                        <TreeView ItemsSource="{Binding Notes}" 
              SelectedItemChanged="NoteTreeView_SelectedItemChanged"
              Margin="10">
                            <TreeView.ItemTemplate>
                                <HierarchicalDataTemplate>
                                    <TextBlock Text="{Binding Title}"/>
                                </HierarchicalDataTemplate>
                            </TreeView.ItemTemplate>
                        </TreeView>
                    </StackPanel>

                    <!-- Секция напоминаний -->
                    <StackPanel Grid.Row="1" Visibility="{Binding CurrentView, Converter={StaticResource ViewToVisibilityConverter}, ConverterParameter=Reminders}">
                        <TreeView ItemsSource="{Binding Reminders}" 
              SelectedItemChanged="ReminderTreeView_SelectedItemChanged"
              Margin="10">
                            <TreeView.ItemTemplate>
                                <HierarchicalDataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Time, StringFormat='{}{0:hh\\:mm}'}" Foreground="DimGray" Margin="0,0,5,0"/>
                                        <TextBlock Text="{Binding Title}"/>
                                    </StackPanel>
                                </HierarchicalDataTemplate>
                            </TreeView.ItemTemplate>
                        </TreeView>
                    </StackPanel>

                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</Window>