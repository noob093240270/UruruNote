<Window x:Class="UruruNotes.CalendarPage"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:local="clr-namespace:UruruNotes" 
        xmlns:converters="clr-namespace:UruruNotes.Models"
        xmlns:viewsmodels="clr-namespace:UruruNotes.ViewsModels" 
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        d:DataContext="{d:DesignInstance Type=viewsmodels:CalendarViewModel}"
        mc:Ignorable="d" 
        MinHeight="550" MinWidth="850"
        Title="CalendarPage" Icon="/Views/calendar.png"
        SizeToContent="WidthAndHeight">
    <Window.Resources>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converters:BoolToBrushConverter x:Key="BoolToBrushConverter" />
        <converters:SubtractMarginConverter x:Key="SubtractMarginConverter" />
        <ScaleTransform x:Key="MainScaleTransform" ScaleX="{Binding Scale}" ScaleY="{Binding Scale}" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <sys:Double x:Key="PanelWidth">400</sys:Double>

        <!-- Анимация закрытия правого меню -->
        <Storyboard x:Key="ClosingRightMenu">
            <DoubleAnimation Storyboard.TargetName="TaskPanel"
                 Storyboard.TargetProperty="Width" 
                 From="{StaticResource PanelWidth}" To="0" 
                 Duration="0:0:0.5" />
        </Storyboard>

        <!-- Анимация открытия правого меню -->
        <Storyboard x:Key="OpeningRightMenu">
            <DoubleAnimation Storyboard.TargetName="TaskPanel"
                 Storyboard.TargetProperty="Width" 
                 From="0" To="{StaticResource PanelWidth}" 
                 Duration="0:0:0.5" />
        </Storyboard>

        <Style x:Key="NoHoverButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0"
                            Padding="5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="White"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="GrayHoverButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0"
                        Padding="5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#F0F0F0"/>
                    <!-- Серый фон при наведении -->
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#E0E0E0"/>
                    <!-- Темнее при нажатии -->
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="StyledButton" TargetType="Button">
            <Setter Property="Padding" Value="6,3"/>
            <Setter Property="Width" Value="130"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="#5C6D93"/>
            <Setter Property="Background" Value="#F8F9FC"/>
            <Setter Property="BorderBrush" Value="#C5CDE6"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="6">
                            <ContentPresenter HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#E3EAF8"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="#B0BADF"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#D6E0F5"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="#A1AAD3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CustomComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5" Padding="5">
                            <Grid>
                                <ToggleButton Name="ToggleButton" Grid.Column="2"
                                      Focusable="False"
                                      IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                      ClickMode="Press">
                                    <Grid>
                                        <Path Fill="Black" Data="M 0 0 L 4 4 L 8 0 Z" 
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
                                    </Grid>
                                </ToggleButton>
                                <ContentPresenter Name="ContentPresenter"
                                          IsHitTestVisible="False"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          Margin="4,0,30,0"
                                          VerticalAlignment="Center"/>
                                <Popup Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Slide">
                                    <Border Background="White" BorderBrush="Gray" BorderThickness="1" CornerRadius="5">
                                        <ScrollViewer>
                                            <ScrollViewer.Resources>
                                                <Style TargetType="ScrollBar">
                                                    <Setter Property="Width" Value="8"/>
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="ScrollBar">
                                                                <Grid Background="Transparent">
                                                                    <Rectangle Fill="LightGray" RadiusX="4" RadiusY="4" Width="8"/>
                                                                    <Thumb Name="Thumb" Background="Gray" Width="8" Height="30"/>
                                                                </Grid>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ScrollViewer.Resources>
                                            <StackPanel IsItemsHost="True"/>
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#F0F0F0"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="BorderBrush" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>

    <Window.Triggers>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ToggleButtonClose">
            <BeginStoryboard Storyboard="{StaticResource ClosingRightMenu}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ToggleButtonOpen">
            <BeginStoryboard Storyboard="{StaticResource OpeningRightMenu}" />
        </EventTrigger>
    </Window.Triggers>

    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
        <Grid x:Name="ContentGrid" LayoutTransform="{Binding ScaleTransform}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MinWidth="400"/>
                <ColumnDefinition Width="Auto" x:Name="NotesColumn"/>
            </Grid.ColumnDefinitions>

            <!-- Календарь -->
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <!-- Заголовок и кнопки -->
                    <RowDefinition Height="Auto" />
                    <!-- Дни недели -->
                    <RowDefinition Height="*" />
                    <!-- Календарь -->
                </Grid.RowDefinitions>

                <!-- Заголовок и кнопки -->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="{Binding MarginTop}" Grid.Row="0">
                    <Button Content="⟨" Width="{Binding ButtonWidth}" Height="{Binding ButtonHeight}" Command="{Binding PreviousMonthCommand}" Background="White" BorderBrush="{x:Null}" Style="{StaticResource NoHoverButtonStyle}"/>
                    <TextBlock Text="{Binding CurrentMonthYear}" FontSize="{Binding TitleFontSize}" FontWeight="Bold" Margin="{Binding MarginMiddle}" Foreground="{Binding ForeGroundFont}"/>
                    <Button Content="⟩" Width="{Binding ButtonWidth}" Height="{Binding ButtonHeight}" Command="{Binding NextMonthCommand}" Background="White" BorderBrush="{x:Null}" Style="{StaticResource NoHoverButtonStyle}"/>
                </StackPanel>

                <!-- Дни недели -->
                <UniformGrid Rows="1" Columns="7" Margin="10" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <TextBlock Text="Пн" TextAlignment="Center" FontWeight="Bold" FontSize="{Binding DayFontSize}"/>
                    <TextBlock Text="Вт" TextAlignment="Center" FontWeight="Bold" FontSize="{Binding DayFontSize}"/>
                    <TextBlock Text="Ср" TextAlignment="Center" FontWeight="Bold" FontSize="{Binding DayFontSize}"/>
                    <TextBlock Text="Чт" TextAlignment="Center" FontWeight="Bold" FontSize="{Binding DayFontSize}"/>
                    <TextBlock Text="Пт" TextAlignment="Center" FontWeight="Bold" FontSize="{Binding DayFontSize}"/>
                    <TextBlock Text="Сб" TextAlignment="Center" FontWeight="Bold" Foreground="Red" FontSize="{Binding DayFontSize}"/>
                    <TextBlock Text="Вс" TextAlignment="Center" FontWeight="Bold" Foreground="Red" FontSize="{Binding DayFontSize}"/>
                </UniformGrid>

                <!-- Календарь -->
                <ItemsControl ItemsSource="{Binding Days}" Grid.Row="2" Margin="0,0,32,0">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Rows="6" Columns="7" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Button Command="{Binding DataContext.OpenTaskAreaCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}" 
                                    CommandParameter="{Binding}" 
                                    Padding="0"
                                    Background="{Binding IsCurrentMonth, Converter={StaticResource BoolToBrushConverter}}"
                                    BorderBrush="Transparent" BorderThickness="0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    VerticalContentAlignment="Center"
                                    HorizontalContentAlignment="Center"
                                    Margin="{Binding DataContext.MarginButtons, RelativeSource={RelativeSource AncestorType=Window}}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="{Binding DisplayText}" 
                                               HorizontalAlignment="Center" VerticalAlignment="Center" 
                                               Grid.Row="0" FontSize="{Binding DataContext.DayFontSize, RelativeSource={RelativeSource AncestorType=Window}}"/>
                                    <StackPanel Orientation="Horizontal" 
                                                HorizontalAlignment="Center" VerticalAlignment="Center" 
                                                Grid.Row="1" >
                                        <Ellipse Width="6" Height="6" Fill="Red" VerticalAlignment="Center"
                                                 Visibility="{Binding HasNote, Converter={StaticResource BoolToVisibilityConverter}}" />
                                        <TextBlock Text="{Binding ReminderTime}" VerticalAlignment="Center" 
                                                   Foreground="Red" FontSize="{Binding DataContext.DayFontSize, RelativeSource={RelativeSource AncestorType=Window}}" />
                                    </StackPanel>
                                </Grid>
                            </Button>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Grid>

            <!-- Панель задач -->
            <Border Grid.Column="1" Width="Auto" 
                    Visibility="{Binding IsTaskPanelVisible, Converter={StaticResource BoolToVisibilityConverter}}" 
                    Margin="10">
                <Grid Margin="-39,0,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition x:Name="TaskPanelColumn" Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="ToggleButtonOpen" Grid.Column="0"
                            Width="20" Height="50"
                             HorizontalAlignment="Right"
                             VerticalAlignment="Bottom"
                             Background="Transparent"
                             Click="TogglePanel_Click"
                             BorderThickness="0"
                            Visibility="Collapsed">
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Grid>
                                    <!-- Прямоугольник-закладка -->
                                    <Rectangle x:Name="BookmarkRectangle"
                            Width="20" Height="50"
                            Fill="LightGray" 
                            StrokeThickness="1"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center" />
                                </Grid>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button x:Name="ToggleButtonClose" Grid.Column="0"
                            Width="20" Height="50"
                             HorizontalAlignment="Right"
                             VerticalAlignment="Bottom"
                             Background="Transparent"
                             Click="TogglePanel_Click"
                             BorderThickness="0" 
                            >
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Grid>
                                    <!-- Прямоугольник-закладка -->
                                    <Rectangle x:Name="BookmarkRectangle"
                                    Width="20" Height="50"
                                    Fill="LightGray" 
                                    StrokeThickness="1"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center" />
                                </Grid>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <StackPanel x:Name="TaskPanel" Grid.Column="1" Background="LightGray" Width="{StaticResource PanelWidth}">
                        <!-- Заметка -->
                        <TextBlock Text="Создать заметку" FontSize="{Binding NoteTitleFontSize}" FontWeight="Bold" Margin="10" HorizontalAlignment="Stretch"/>
                              <TextBox TextWrapping="Wrap" Text="{Binding NewTaskContent}" 
               AcceptsReturn="True" AcceptsTab="True" 
               VerticalScrollBarVisibility="Auto"  
               HorizontalAlignment="Stretch"
               Height="{Binding TextBoxHeight}" Margin="10" 
               MaxWidth="{Binding ActualWidth, ElementName=TaskPanel, 
Converter={StaticResource SubtractMarginConverter}, 
ConverterParameter=20}"
               FontSize="{Binding NoteFontSize}" 
               CaretBrush="#FF235C9A" SelectionBrush="#FF235C9A" 
               PreviewKeyDown="TextBox_PreviewKeyDown" Loaded="TextBox_Loaded" />
                        <Button Content="Сохранить" Command="{Binding SaveNoteCommand}" 
                                MinWidth="80" MinHeight="25" 
                                Margin="20,5,5,10" HorizontalAlignment="Left" 
                                 FontSize="{Binding NoteFontSize}" Style="{StaticResource StyledButton}"/>

                        <!-- Напоминание -->
                        <TextBlock Text="Создать напоминание" FontSize="{Binding NoteTitleFontSize}" FontWeight="Bold" Margin="10" HorizontalAlignment="Stretch"/>
                               
                              <TextBox TextWrapping="Wrap" Text="{Binding NewTaskContentRemind}" 
               AcceptsReturn="True" AcceptsTab="True" 
               VerticalScrollBarVisibility="Auto" 
               HorizontalAlignment="Stretch"  
               Height="{Binding TextBoxHeight}" Margin="10" 
               MaxWidth="{Binding ActualWidth, ElementName=TaskPanel, 
Converter={StaticResource SubtractMarginConverter}, 
ConverterParameter=20}"
               FontSize="{Binding NoteFontSize}" 
               CaretBrush="#FF235C9A" SelectionBrush="#FF235C9A" 
               PreviewKeyDown="TextBox_PreviewKeyDown" Loaded="TextBox_Loaded" />
                        <Button Content="Сохранить" Command="{Binding SaveReminderCommand}" 
                                MinWidth="80" MinHeight="25" Margin="20,5,5,10"
                                 FontSize="{Binding NoteFontSize}" Style="{StaticResource StyledButton}" HorizontalAlignment="Left" />
                        <TextBlock Text="Время напоминания:" FontSize="{Binding NoteFontSize}" Height="Auto" Width="Auto" Margin="20,0,0,0" HorizontalAlignment="Left" />
                        <StackPanel Orientation="Horizontal" Margin="10,5,10,10">
                            <ComboBox x:Name="HourPicker" SelectedItem="{Binding SelectedHour}" 
                                      Width="100" VerticalAlignment="Center" Margin="5,0,5,0" 
                                      FontSize="{Binding NoteFontSize}" Style="{StaticResource CustomComboBoxStyle}">
                                <ComboBox.ItemsSource>
                                    <x:Array Type="{x:Type sys:Int32}">
                                        <sys:Int32>0</sys:Int32>
                                        <sys:Int32>1</sys:Int32>
                                        <sys:Int32>2</sys:Int32>
                                        <sys:Int32>3</sys:Int32>
                                        <sys:Int32>4</sys:Int32>
                                        <sys:Int32>5</sys:Int32>
                                        <sys:Int32>6</sys:Int32>
                                        <sys:Int32>7</sys:Int32>
                                        <sys:Int32>8</sys:Int32>
                                        <sys:Int32>9</sys:Int32>
                                        <sys:Int32>10</sys:Int32>
                                        <sys:Int32>11</sys:Int32>
                                        <sys:Int32>12</sys:Int32>
                                        <sys:Int32>13</sys:Int32>
                                        <sys:Int32>14</sys:Int32>
                                        <sys:Int32>15</sys:Int32>
                                        <sys:Int32>16</sys:Int32>
                                        <sys:Int32>17</sys:Int32>
                                        <sys:Int32>18</sys:Int32>
                                        <sys:Int32>19</sys:Int32>
                                        <sys:Int32>20</sys:Int32>
                                        <sys:Int32>21</sys:Int32>
                                        <sys:Int32>22</sys:Int32>
                                        <sys:Int32>23</sys:Int32>
                                    </x:Array>
                                </ComboBox.ItemsSource>
                            </ComboBox>

                            <ComboBox x:Name="MinutePicker" SelectedItem="{Binding SelectedMinute}" 

                                      Width="100" VerticalAlignment="Center" Margin="0,0,10,0" 
                                      FontSize="{Binding NoteFontSize}" Style="{StaticResource CustomComboBoxStyle}">
                                <ComboBox.ItemsSource>
                                    <x:Array Type="{x:Type sys:Int32}">
                                        <sys:Int32>0</sys:Int32>
                                        <sys:Int32>5</sys:Int32>
                                        <sys:Int32>10</sys:Int32>
                                        <sys:Int32>15</sys:Int32>
                                        <sys:Int32>20</sys:Int32>
                                        <sys:Int32>25</sys:Int32>
                                        <sys:Int32>30</sys:Int32>
                                        <sys:Int32>35</sys:Int32>
                                        <sys:Int32>40</sys:Int32>
                                        <sys:Int32>45</sys:Int32>
                                        <sys:Int32>50</sys:Int32>
                                        <sys:Int32>55</sys:Int32>
                                    </x:Array>
                                </ComboBox.ItemsSource>
                            </ComboBox>

                        </StackPanel>
                    </StackPanel>
                </Grid>
            </Border>
        </Grid>
    </ScrollViewer>
</Window>