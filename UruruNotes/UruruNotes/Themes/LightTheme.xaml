<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- Цвета для светлой темы (в виде Color) -->
    <Color x:Key="WindowBackgroundColor" A="255" R="255" G="255" B="255"/>
    <!-- #FFFFFF -->
    <Color x:Key="TextForegroundColor" A="255" R="17" G="57" B="115"/>
    <!-- #000000 -->
    <Color x:Key="ButtonBackgroundColor"  A="255" R="253" G="253" B="253"/>
    <!-- #FFD5D5D5 -->
    <Color x:Key="ButtonBorderColor"  A="255" R="253" G="253" B="253"/>
    <!-- #FF235C9A -->
    <Color x:Key="ButtonForegroundColor"  A="255" R="17" G="57" B="115"/>
    <!-- #FF235C9A -->
    <Color x:Key="PanelBackgroundColor" A="255" R="243" G="242" B="248"/>
    <!-- #FFF6F6F6 -->
    <Color x:Key="MenuBackgroundColor" A="255" R="243" G="242" B="248"/>
    <!-- #FFEBEBEB -->
    <Color x:Key="BorderBrushColor" A="255" R="231" G="230" B="235"/>
    <!-- #FFCCCCCC -->
    <Color x:Key="TextBoxCaretColor" A="255" R="35" G="92" B="154"/>
    <!-- #FF235C9A****** -->
    <Color x:Key="ControlBackgroundColor" A="255" R="255" G="255" B="255"/>
    <!-- #FFE0E0E0 -->
    <Color x:Key="ControlBorderColor" A="255" R="229" G="228" B="234"/>
    <!-- #FFABABAB -->
    <Color x:Key="PlaceholderForegroundColor" A="255" R="128" G="128" B="128"/>
    <!-- #FF808080 -->
    <Color x:Key="TreeViewForegroundColor" A="255" R="15" G="57" B="115"/>
    <!-- #FF235C9A -->
    <Color x:Key="TreeViewBackgroundColor" A="255" R="255" G="255" B="255"/>
    <!-- #FFFFFFFF -->
    <Color x:Key="ButtonPressedBackgroundColor" A="255" R="180" G="180" B="180"/>
    <!-- #FFB4B4B4 -->
    <Color x:Key="IconColor" A="255" R="35" G="92" B="154"/>
    <!-- #FF235C9A -->
    <!-- Новые цвета из тёмной темы -->
    <Color x:Key="ButtonActiveBackgroundColor" A="255" R="243" G="242" B="248"/>
    <!-- #FFC8C8C8 (светло-серый для активной кнопки) -->
    <Color x:Key="ButtonActiveForegroundColor"  A="255" R="243" G="242" B="248"/>
    <!-- #FF144682 (тёмно-синий для активной кнопки) -->
    <Color x:Key="TopPanelBackgroundColor" A="255" R="228" G="227" B="233"/>
    <!-- #FFEBEBEB (светлый фон верхней панели) -->
    <Color x:Key="BottomPanelBackgroundColor"  A="255"  R="243" G="242" B="248"/>
    <!-- #FFEBEBEB (светлый фон нижней панели) -->
    <Color x:Key="ContextMenuBackgroundColor" A="255" R="255" G="255" B="255"/>
    <!-- #FFFFFFFF (белый для контекстного меню) -->
    <Color x:Key="ContextMenuBorderColor" A="255" R="204" G="204" B="204"/>
    <!-- #FFCCCCCC (серый для границы контекстного меню) -->
    <Color x:Key="ContextMenuForegroundColor" A="255" R="0" G="0" B="0"/>
    <!-- #FF000000 (чёрный для текста контекстного меню) -->
    <Color x:Key="ContextMenuHighlightBackgroundColor" A="255" R="220" G="220" B="220"/>
    <!-- #FFDCDCDC (светло-серый при наведении) -->
    <Color x:Key="ContextMenuPressedBackgroundColor" A="255" R="200" G="200" B="200"/>
    <!-- #FFC8C8C8 (серый при нажатии) -->
    <!-- Новые цвета для календаря -->
    <Color x:Key="CalendarMonthForegroundColor"  A="255" R="17" G="57" B="115" />
    <!-- название месяца -->
    <Color x:Key="CalendarDayForegroundColor" A="255" R="17" G="57" B="115"/>
    <!-- #FFFF96 (для дат) -->
    <!-- Новый цвет для эффекта наведения -->
    <Color x:Key="ButtonHoverBackgroundColor" A="50" R="74" G="144" B="226"/>
    <!-- Полупрозрачный голубой (A=100) -->
    <Color x:Key="InputTextColor" A="255" R="0" G="0" B="0"/>

    <!-- Кисти на основе цветов -->
    <SolidColorBrush x:Key="WindowBackground" Color="{DynamicResource WindowBackgroundColor}"/>
    <SolidColorBrush x:Key="TextForeground" Color="{DynamicResource TextForegroundColor}"/>
    <SolidColorBrush x:Key="ButtonBackground" Color="{DynamicResource ButtonBackgroundColor}"/>
    <SolidColorBrush x:Key="ButtonBorder" Color="{DynamicResource ButtonBorderColor}"/>
    <SolidColorBrush x:Key="ButtonForeground" Color="{DynamicResource ButtonForegroundColor}"/>
    <SolidColorBrush x:Key="PanelBackground" Color="{DynamicResource PanelBackgroundColor}"/>
    <SolidColorBrush x:Key="MenuBackground" Color="{DynamicResource PanelBackgroundColor}"/>
    <SolidColorBrush x:Key="BorderBrush" Color="{DynamicResource BorderBrushColor}"/>
    <SolidColorBrush x:Key="TextBoxCaret" Color="{DynamicResource TextBoxCaretColor}"/>
    <SolidColorBrush x:Key="ControlBackground" Color="{DynamicResource ControlBackgroundColor}"/>
    <SolidColorBrush x:Key="ControlBorder" Color="{DynamicResource ControlBorderColor}"/>
    <SolidColorBrush x:Key="PlaceholderForeground" Color="{DynamicResource PlaceholderForegroundColor}"/>
    <SolidColorBrush x:Key="TreeViewForeground" Color="{DynamicResource TreeViewForegroundColor}"/>
    <SolidColorBrush x:Key="TreeViewBackground" Color="{DynamicResource TreeViewBackgroundColor}"/>
    <SolidColorBrush x:Key="ButtonPressedBackground" Color="{DynamicResource ButtonPressedBackgroundColor}"/>
    <SolidColorBrush x:Key="Icon" Color="{DynamicResource IconColor}"/>
    <!-- Новые кисти -->
    <SolidColorBrush x:Key="ButtonActiveBackground" Color="{DynamicResource ButtonActiveBackgroundColor}"/>
    <SolidColorBrush x:Key="ButtonActiveForeground" Color="{DynamicResource ButtonActiveForegroundColor}"/>
    <SolidColorBrush x:Key="TopPanelBackground" Color="{DynamicResource TopPanelBackgroundColor}"/>
    <SolidColorBrush x:Key="BottomPanelBackground" Color="{DynamicResource BottomPanelBackgroundColor}"/>
    <SolidColorBrush x:Key="ContextMenuBackground" Color="{DynamicResource ContextMenuBackgroundColor}"/>
    <SolidColorBrush x:Key="ContextMenuBorder" Color="{DynamicResource ContextMenuBorderColor}"/>
    <SolidColorBrush x:Key="ContextMenuForeground" Color="{DynamicResource ContextMenuForegroundColor}"/>
    <SolidColorBrush x:Key="ContextMenuHighlightBackground" Color="{DynamicResource ContextMenuHighlightBackgroundColor}"/>
    <SolidColorBrush x:Key="ContextMenuPressedBackground" Color="{DynamicResource ContextMenuPressedBackgroundColor}"/>
    <SolidColorBrush x:Key="CalendarMonthForeground" Color="{DynamicResource CalendarMonthForegroundColor}"/>
    <SolidColorBrush x:Key="CalendarDayForeground" Color="{DynamicResource CalendarDayForegroundColor}"/>
    <SolidColorBrush x:Key="ButtonHoverBackground" Color="{DynamicResource ButtonHoverBackgroundColor}"/>
    <SolidColorBrush x:Key="InputText" Color="{DynamicResource InputTextColor}"/>

    <!-- Стили для светлой темы -->
    <Style TargetType="Window">
        <Setter Property="Background" Value="{DynamicResource WindowBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForeground}"/>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{DynamicResource GlobalFont}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForeground}"/>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="{DynamicResource GlobalScale}" ScaleY="{DynamicResource GlobalScale}"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="FontFamily" Value="{DynamicResource GlobalFont}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{DynamicResource InputText}"/>
        <Setter Property="Background" Value="{DynamicResource ControlBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorder}"/>
        <Setter Property="CaretBrush" Value="{DynamicResource TextBoxCaret}"/>
        <Setter Property="SelectionBrush" Value="{DynamicResource TextBoxCaret}"/>
        <Setter Property="SelectionOpacity" Value="0.5"/>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="{DynamicResource GlobalScale}" ScaleY="{DynamicResource GlobalScale}"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button">
        <Setter Property="FontFamily" Value="{DynamicResource GlobalFont}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}"/>
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="{DynamicResource GlobalScale}" ScaleY="{DynamicResource GlobalScale}"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ButtonHoverBackground}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource ButtonPressedBackground}"/>
            </Trigger>
            <Trigger Property="Tag" Value="Active">
                <Setter Property="Background" Value="{DynamicResource ButtonActiveBackground}"/>
                <Setter Property="Foreground" Value="{DynamicResource ButtonActiveForeground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ComboBox">
        <Setter Property="FontFamily" Value="{DynamicResource GlobalFont}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForeground}"/>
        <Setter Property="Background" Value="{DynamicResource ControlBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorder}"/>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="{DynamicResource GlobalScale}" ScaleY="{DynamicResource GlobalScale}"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="RichTextBox">
        <Setter Property="FontFamily" Value="{DynamicResource GlobalFont}"/>
        <Setter Property="FontSize" Value="{DynamicResource GlobalFontSize}"/>
        <Setter Property="Foreground" Value="{DynamicResource InputText}"/>
        <Setter Property="Background" Value="{DynamicResource ControlBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorder}"/>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="{DynamicResource GlobalScale}" ScaleY="{DynamicResource GlobalScale}"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SettingsTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Background" Value="#FFE0E0E0"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>


    <Style x:Key="ScaleButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="FontSize" Value="16"/>
        <!-- Увеличиваем шрифт для знаков -->
        <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}"/>
        <Setter Property="Background" Value="#FFE0E0E0"/>
        <!-- Чуть темнее фона -->
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="25"/>
        <!-- Фиксированная ширина -->
        <Setter Property="Height" Value="25"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFD5D5D5"/>
                <!-- Ещё темнее при наведении -->
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource ButtonPressedBackground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>



    <Style TargetType="TreeView">
        <Setter Property="Foreground" Value="{DynamicResource TreeViewForeground}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="{DynamicResource TreeViewBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
    </Style>

    <Style TargetType="TreeViewItem">
        <Setter Property="Foreground" Value="{DynamicResource TreeViewForeground}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="{DynamicResource TreeViewBackground}"/>
    </Style>

    <Style TargetType="Border" x:Key="LeftMenuBorder">
        <Setter Property="Background" Value="{DynamicResource MenuBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style TargetType="Border" x:Key="TopPanelBorder">
        <Setter Property="Background" Value="{DynamicResource TopPanelBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style TargetType="Border" x:Key="BottomPanelBorder">
        <Setter Property="Background" Value="{DynamicResource BottomPanelBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style TargetType="Border" x:Key="PanelBorder">
        <Setter Property="Background" Value="{DynamicResource PanelBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style x:Key="NavigationButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Padding" Value="2"/>
    </Style>

    <!-- Стиль для SearchTextBox -->
    <Style x:Key="SearchTextBoxStyle" TargetType="TextBox">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{DynamicResource ControlBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorder}"/>
        <Setter Property="Foreground" Value="{DynamicResource InputText}"/>
        <Setter Property="FontFamily" Value="{DynamicResource GlobalFont}"/>
        <Setter Property="FontSize" Value="{DynamicResource GlobalFontSize}"/>
        <Setter Property="TextBlock.LineHeight" Value="20"/>
    </Style>

    <!-- Стиль для кнопок "Новый файл" и "Новая папка" -->
    <Style x:Key="FolderFileButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="FontFamily" Value="{DynamicResource GlobalFont}"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}"/>
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="{DynamicResource GlobalScale}" ScaleY="{DynamicResource GlobalScale}"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль для ContextMenu -->
    <Style TargetType="ContextMenu">
        <Setter Property="Background" Value="{DynamicResource PanelBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <!-- Стиль для MenuItem -->
    <Style TargetType="MenuItem">
        <Setter Property="Background" Value="{DynamicResource PanelBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForeground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="Padding" Value="5"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
                <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource ButtonPressedBackground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Отдельный стиль для контекстного меню файлов -->
    <Style x:Key="FileContextMenuStyle" TargetType="ContextMenu">
        <Setter Property="Background" Value="{DynamicResource ContextMenuBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ContextMenuBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Gray" Direction="315" ShadowDepth="2" Opacity="0.3" BlurRadius="5"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4"
                            Effect="{TemplateBinding Effect}">
                        <ItemsPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Отдельный стиль для элементов контекстного меню файлов -->
    <Style x:Key="FileMenuItemStyle" TargetType="MenuItem">
        <Setter Property="Background" Value="{DynamicResource ContextMenuBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource ContextMenuForeground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ContextMenuBorder}"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontFamily" Value="{DynamicResource GlobalFont}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ContextMenuHighlightBackground}"/>
                <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource ContextMenuPressedBackground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Стиль для Calendar -->
    <Style TargetType="Calendar">
        <Setter Property="Background" Value="{DynamicResource PanelBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForeground}"/>
        <Setter Property="CalendarDayButtonStyle">
            <Setter.Value>
                <Style TargetType="CalendarDayButton">
                    <Setter Property="Foreground" Value="{DynamicResource CalendarDayForeground}"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="FontSize" Value="14"/>
                    <Setter Property="FontFamily" Value="{DynamicResource GlobalFont}"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ButtonForeground}"/>
                            <Setter Property="Foreground" Value="{DynamicResource WindowBackground}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="CalendarButtonStyle">
            <Setter.Value>
                <Style TargetType="CalendarButton">
                    <Setter Property="Foreground" Value="{DynamicResource CalendarMonthForeground}"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="FontSize" Value="16"/>
                    <Setter Property="FontFamily" Value="{DynamicResource GlobalFont}"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль для DatePicker -->
    <Style TargetType="DatePicker">
        <Setter Property="Foreground" Value="{DynamicResource TextForeground}"/>
        <Setter Property="Background" Value="{DynamicResource ControlBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorder}"/>
        <Setter Property="FontFamily" Value="{DynamicResource GlobalFont}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="CalendarStyle" Value="{StaticResource {x:Type Calendar}}"/>
    </Style>
</ResourceDictionary>