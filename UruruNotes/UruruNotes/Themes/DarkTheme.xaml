<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- Цвета для тёмной темы (в виде Color) -->
    <Color x:Key="WindowBackgroundColor" A="255" R="64" G="64" B="67"/>
    <!-- #282828 -->
    <Color x:Key="TextForegroundColor" A="255" R="131" G="190" B="235"/>
    <!-- #4A90E2, синий для всего текста -->
    <Color x:Key="InputTextForegroundColor" A="255" R="230" G="230" B="230"/>
    <!-- #E6E6E6, белый для полей ввода -->
    <Color x:Key="ButtonBackgroundColor" A="255" R="72" G="72" B="75"/>
    <!-- #323232 -->
    <Color x:Key="ButtonBorderColor" A="255" R="72" G="72" B="75"/>
    <!-- #4A90E2 -->
    <Color x:Key="ButtonForegroundColor" A="255" R="131" G="190" B="235"/>
    <!-- #4A90E2 -->
    <Color x:Key="PanelBackgroundColor" A="255" R="45" G="45" B="48"/>
    <!-- #262A2D -->
    <Color x:Key="MenuBackgroundColor" A="255" R="45" G="45" B="48"/>
    <!-- #282D32 -->
    <Color x:Key="BorderBrushColor" A="255" R="41" G="41" B="44"/>
    <!-- #373737 -->
    <Color x:Key="TextBoxCaretColor" A="255" R="131" G="190" B="235"/>
    <!-- #4A90E2 -->
    <Color x:Key="ControlBackgroundColor" A="255" R="64" G="64" B="67"/>
    <!-- #323232 -->
    <Color x:Key="ControlBorderColor" A="255" R="64" G="64" B="67"/>
    <!-- #373737 -->
    <Color x:Key="PlaceholderForegroundColor" A="255" R="160" G="160" B="160"/>
    <!-- #A0A0A0 -->
    <Color x:Key="TreeViewForegroundColor" A="255" R="131" G="190" B="235"/>
    <!-- #4A90E2 -->
    <Color x:Key="TreeViewBackgroundColor" A="255" R="72" G="72" B="75"/>
    <!-- #323232 -->
    <Color x:Key="ButtonActiveBackgroundColor" A="255" R="90" G="90" B="95"/>
    <!-- #5A5A5F -->
    <Color x:Key="ButtonActiveForegroundColor" A="255" R="100" G="160" B="240"/>
    <!-- #64A0F0 -->
    <Color x:Key="ButtonPressedBackgroundColor" A="255" R="100" G="100" B="105"/>
    <!-- #646469 -->
    <Color x:Key="IconColor" A="255" R="74" G="144" B="226"/>
    <!-- #4A90E2 -->
    <Color x:Key="TopPanelBackgroundColor" A="255" R="40" G="45" B="43"/>
    <Color x:Key="BottomPanelBackgroundColor" A="255" R="45" G="45" B="48"/>
    <Color x:Key="ContextMenuBackgroundColor" A="255" R="60" G="60" B="65"/>
    <!-- #3C3C41 -->
    <Color x:Key="ContextMenuBorderColor" A="255" R="80" G="80" B="85"/>
    <!-- #505055 -->
    <Color x:Key="ContextMenuForegroundColor" A="255" R="200" G="200" B="200"/>
    <!-- #C8C8C8 -->
    <Color x:Key="ContextMenuHighlightBackgroundColor" A="255" R="80" G="80" B="85"/>
    <!-- #505055 -->
    <Color x:Key="ContextMenuPressedBackgroundColor" A="255" R="90" G="90" B="95"/>
    <!-- #5A5A5F -->
    <Color x:Key="CalendarMonthForegroundColor" A="255" R="131" G="190" B="235"/>
    <!-- #83BEEB -->
    <Color x:Key="CalendarDayForegroundColor" A="255" R="135" G="196" B="242"/>
    <!-- #87C4F2 -->
    <Color x:Key="ButtonHoverBackgroundColor" A="50" R="74" G="144" B="226"/>
    <!-- Полупрозрачный голубой -->
    <Color x:Key="InputTextColor" A="255" R="255" G="255" B="255"/>

    <!-- Кисти на основе цветов -->
    <SolidColorBrush x:Key="WindowBackground" Color="{DynamicResource WindowBackgroundColor}"/>
    <SolidColorBrush x:Key="TextForeground" Color="{DynamicResource TextForegroundColor}"/>
    <SolidColorBrush x:Key="InputTextForeground" Color="{DynamicResource InputTextForegroundColor}"/>
    <SolidColorBrush x:Key="ButtonBackground" Color="{DynamicResource ButtonBackgroundColor}"/>
    <SolidColorBrush x:Key="ButtonBorder" Color="{DynamicResource ButtonBorderColor}"/>
    <SolidColorBrush x:Key="ButtonForeground" Color="{DynamicResource ButtonForegroundColor}"/>
    <SolidColorBrush x:Key="PanelBackground" Color="{DynamicResource PanelBackgroundColor}"/>
    <SolidColorBrush x:Key="MenuBackground" Color="{DynamicResource MenuBackgroundColor}"/>
    <SolidColorBrush x:Key="BorderBrush" Color="{DynamicResource BorderBrushColor}"/>
    <SolidColorBrush x:Key="TextBoxCaret" Color="{DynamicResource TextBoxCaretColor}"/>
    <SolidColorBrush x:Key="ControlBackground" Color="{DynamicResource ControlBackgroundColor}"/>
    <SolidColorBrush x:Key="ControlBorder" Color="{DynamicResource ControlBorderColor}"/>
    <SolidColorBrush x:Key="PlaceholderForeground" Color="{DynamicResource PlaceholderForegroundColor}"/>
    <SolidColorBrush x:Key="TreeViewForeground" Color="{DynamicResource TreeViewForegroundColor}"/>
    <SolidColorBrush x:Key="TreeViewBackground" Color="{DynamicResource TreeViewBackgroundColor}"/>
    <SolidColorBrush x:Key="ButtonPressedBackground" Color="{DynamicResource ButtonPressedBackgroundColor}"/>
    <SolidColorBrush x:Key="Icon" Color="{DynamicResource IconColor}"/>
    <SolidColorBrush x:Key="TopPanelBackground" Color="{DynamicResource TopPanelBackgroundColor}"/>
    <SolidColorBrush x:Key="BottomPanelBackground" Color="{DynamicResource BottomPanelBackgroundColor}"/>
    <SolidColorBrush x:Key="ButtonActiveBackground" Color="{DynamicResource ButtonActiveBackgroundColor}"/>
    <SolidColorBrush x:Key="ButtonActiveForeground" Color="{DynamicResource ButtonActiveForegroundColor}"/>
    <SolidColorBrush x:Key="ContextMenuBackground" Color="{DynamicResource ContextMenuBackgroundColor}"/>
    <SolidColorBrush x:Key="ContextMenuBorder" Color="{DynamicResource ContextMenuBorderColor}"/>
    <SolidColorBrush x:Key="ContextMenuForeground" Color="{DynamicResource ContextMenuForegroundColor}"/>
    <SolidColorBrush x:Key="ContextMenuHighlightBackground" Color="{DynamicResource ContextMenuHighlightBackgroundColor}"/>
    <SolidColorBrush x:Key="ContextMenuPressedBackground" Color="{DynamicResource ContextMenuPressedBackgroundColor}"/>
    <SolidColorBrush x:Key="CalendarMonthForeground" Color="{DynamicResource CalendarMonthForegroundColor}"/>
    <SolidColorBrush x:Key="CalendarDayForeground" Color="{DynamicResource CalendarDayForegroundColor}"/>
    <SolidColorBrush x:Key="InputText" Color="{DynamicResource InputTextColor}"/>

    <!-- Стили для тёмной темы -->
    <Style TargetType="Window">
        <Setter Property="Background" Value="{DynamicResource WindowBackground}"/>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{DynamicResource GlobalFont}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForeground}"/>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="{DynamicResource GlobalScale}" ScaleY="{DynamicResource GlobalScale}"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="FontFamily" Value="{DynamicResource GlobalFont}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{DynamicResource InputTextForeground}"/>
        <Setter Property="Background" Value="{DynamicResource ControlBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorder}"/>
        <Setter Property="CaretBrush" Value="{DynamicResource TextBoxCaret}"/>
        <Setter Property="SelectionBrush" Value="{DynamicResource TextBoxCaret}"/>
        <Setter Property="SelectionOpacity" Value="0.5"/>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="{DynamicResource GlobalScale}" ScaleY="{DynamicResource GlobalScale}"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button">
        <Setter Property="FontFamily" Value="{DynamicResource GlobalFont}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}"/>
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="{DynamicResource GlobalScale}" ScaleY="{DynamicResource GlobalScale}"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource ButtonPressedBackground}"/>
            </Trigger>
            <Trigger Property="Tag" Value="Active">
                <Setter Property="Background" Value="{DynamicResource ButtonActiveBackground}"/>
                <Setter Property="Foreground" Value="{DynamicResource ButtonActiveForeground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ComboBox">
        <Setter Property="FontFamily" Value="{DynamicResource GlobalFont}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForeground}"/>
        <Setter Property="Background" Value="{DynamicResource ControlBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorder}"/>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="{DynamicResource GlobalScale}" ScaleY="{DynamicResource GlobalScale}"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="RichTextBox">
        <Setter Property="FontFamily" Value="{DynamicResource GlobalFont}"/>
        <Setter Property="FontSize" Value="{DynamicResource GlobalFontSize}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForeground}"/>
        <Setter Property="Background" Value="{DynamicResource ControlBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorder}"/>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="{DynamicResource GlobalScale}" ScaleY="{DynamicResource GlobalScale}"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TreeView">
        <Setter Property="Foreground" Value="{DynamicResource TreeViewForeground}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="{DynamicResource TreeViewBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
    </Style>

    <Style TargetType="TreeViewItem">
        <Setter Property="Foreground" Value="{DynamicResource TreeViewForeground}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="{DynamicResource TreeViewBackground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <!-- Треугольник-открыватель -->
                        <ToggleButton x:Name="Expander"
                                      Grid.Column="0"
                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Grid Width="15" Height="13" Background="Transparent">
                                                    <Path x:Name="ExpandPath"
                                                          HorizontalAlignment="Left"
                                                          VerticalAlignment="Center"
                                                          Margin="1,1,1,1"
                                                          Fill="Transparent"
                                                          Stroke="{DynamicResource TreeViewForeground}"
                                                          StrokeThickness="1.5"
                                                          Data="M 4 0 L 8 4 L 4 8 Z"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter TargetName="ExpandPath" Property="Data" Value="M 0 4 L 8 4 L 4 8 Z"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <!-- Заголовок элемента -->
                        <Border x:Name="Bd"
                                Grid.Column="1"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                Padding="2">
                            <ContentPresenter x:Name="PART_Header"
                                              ContentSource="Header"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                                <ContentPresenter.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Foreground" Value="{DynamicResource TreeViewForeground}"/>
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </Border>
                        <!-- Дочерние элементы -->
                        <ItemsPresenter x:Name="ItemsHost"
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        Grid.ColumnSpan="2"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ButtonActiveBackground}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonActiveForeground}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ButtonBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Border" x:Key="LeftMenuBorder">
        <Setter Property="Background" Value="{DynamicResource MenuBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style TargetType="Border" x:Key="TopPanelBorder">
        <Setter Property="Background" Value="{DynamicResource TopPanelBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style TargetType="Border" x:Key="BottomPanelBorder">
        <Setter Property="Background" Value="{DynamicResource BottomPanelBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style TargetType="Border" x:Key="PanelBorder">
        <Setter Property="Background" Value="{DynamicResource PanelBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style x:Key="NavigationButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="2"/>
    </Style>

    <Style x:Key="SearchTextBoxStyle" TargetType="TextBox">
        <Setter Property="Padding" Value="2"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="{DynamicResource ControlBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorder}"/>
        <Setter Property="Foreground" Value="{DynamicResource InputTextForeground}"/>
        <Setter Property="FontFamily" Value="{DynamicResource GlobalFont}"/>
        <Setter Property="FontSize" Value="{DynamicResource GlobalFontSize}"/>
        <Setter Property="TextBlock.LineHeight" Value="20"/>
    </Style>

    <Style x:Key="FolderFileButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="FontFamily" Value="{DynamicResource GlobalFont}"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}"/>
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="{DynamicResource GlobalScale}" ScaleY="{DynamicResource GlobalScale}"/>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ScaleButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="FontSize" Value="16"/>
        <!-- Увеличиваем шрифт для знаков -->
        <Setter Property="Foreground" Value="{DynamicResource InputTextForeground}"/>
        <Setter Property="Background" Value="#FF505055"/>
        <!-- Чуть светлее фона -->
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="25"/>
        <!-- Фиксированная ширина -->
        <Setter Property="Height" Value="25"/>
        <!-- Фиксированная высота -->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF646469"/>
                <!-- Ещё светлее при наведении -->
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource ButtonPressedBackground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ScaleTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Background" Value="#FFE0E0E0"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="ContextMenu">
        <Setter Property="Background" Value="{DynamicResource PanelBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style TargetType="MenuItem">
        <Setter Property="Background" Value="{DynamicResource PanelBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForeground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="Padding" Value="5"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
                <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource ButtonPressedBackground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FileContextMenuStyle" TargetType="ContextMenu">
        <Setter Property="Background" Value="{DynamicResource ContextMenuBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ContextMenuBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" Direction="315" ShadowDepth="2" Opacity="0.3" BlurRadius="5"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4"
                            Effect="{TemplateBinding Effect}">
                        <ItemsPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FileMenuItemStyle" TargetType="MenuItem">
        <Setter Property="Background" Value="{DynamicResource ContextMenuBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource ContextMenuForeground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ContextMenuBorder}"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontFamily" Value="{DynamicResource GlobalFont}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ContextMenuHighlightBackground}"/>
                <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource ContextMenuPressedBackground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Calendar">
        <Setter Property="Background" Value="{DynamicResource PanelBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CalendarDayButtonStyle">
            <Setter.Value>
                <Style TargetType="CalendarDayButton">
                    <Setter Property="Foreground" Value="{DynamicResource CalendarDayForeground}"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="FontSize" Value="14"/>
                    <Setter Property="FontFamily" Value="{DynamicResource GlobalFont}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="CalendarDayButton">
                                <Border Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="1">
                                    <ContentPresenter HorizontalAlignment="Center"
                                                      VerticalAlignment="Center">
                                        <ContentPresenter.Resources>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Foreground" Value="{DynamicResource CalendarDayForeground}"/>
                                            </Style>
                                        </ContentPresenter.Resources>
                                    </ContentPresenter>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource ButtonForeground}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource WindowBackground}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="CalendarButtonStyle">
            <Setter.Value>
                <Style TargetType="CalendarButton">
                    <Setter Property="Foreground" Value="{DynamicResource CalendarMonthForeground}"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="FontSize" Value="16"/>
                    <Setter Property="FontFamily" Value="{DynamicResource GlobalFont}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="CalendarButton">
                                <Border Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="1">
                                    <ContentPresenter HorizontalAlignment="Center"
                                                      VerticalAlignment="Center">
                                        <ContentPresenter.Resources>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Foreground" Value="{DynamicResource CalendarMonthForeground}"/>
                                            </Style>
                                        </ContentPresenter.Resources>
                                    </ContentPresenter>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="DatePicker">
        <Setter Property="Foreground" Value="{DynamicResource InputText}"/>
        <Setter Property="Background" Value="{DynamicResource ControlBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorder}"/>
        <Setter Property="FontFamily" Value="{DynamicResource GlobalFont}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="CalendarStyle" Value="{StaticResource {x:Type Calendar}}"/>
    </Style>
</ResourceDictionary>